{"version":3,"sources":["vs/loader.js"],"names":["define","AMDLoader","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","length","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","RegExp","result","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","preferScriptTags","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","i","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","len","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","amdModulesPattern","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","isElectronRenderer","getConfig","BrowserScriptLoader","NodeScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","document","createElement","setAttribute","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","moduleExports_2","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","warn","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader"],"mappings":"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","file":"loader.js","sourcesContent":["/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.21.3(b251bd952b84a3bdf68dad0141c37137dac55d64)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/*---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *---------------------------------------------------------------------------------------------\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _amdLoaderGlobal = this;\r\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    AMDLoader.global = _amdLoaderGlobal;\r\n    var Environment = /** @class */ (function () {\r\n        function Environment() {\r\n            this._detected = false;\r\n            this._isWindows = false;\r\n            this._isNode = false;\r\n            this._isElectronRenderer = false;\r\n            this._isWebWorker = false;\r\n        }\r\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWindows;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isNode\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isNode;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isElectronRenderer;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\r\n            get: function () {\r\n                this._detect();\r\n                return this._isWebWorker;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Environment.prototype._detect = function () {\r\n            if (this._detected) {\r\n                return;\r\n            }\r\n            this._detected = true;\r\n            this._isWindows = Environment._isWindows();\r\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\r\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\r\n        };\r\n        Environment._isWindows = function () {\r\n            if (typeof navigator !== 'undefined') {\r\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (typeof process !== 'undefined') {\r\n                return (process.platform === 'win32');\r\n            }\r\n            return false;\r\n        };\r\n        return Environment;\r\n    }());\r\n    AMDLoader.Environment = Environment;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var LoaderEvent = /** @class */ (function () {\r\n        function LoaderEvent(type, detail, timestamp) {\r\n            this.type = type;\r\n            this.detail = detail;\r\n            this.timestamp = timestamp;\r\n        }\r\n        return LoaderEvent;\r\n    }());\r\n    AMDLoader.LoaderEvent = LoaderEvent;\r\n    var LoaderEventRecorder = /** @class */ (function () {\r\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\r\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\r\n        }\r\n        LoaderEventRecorder.prototype.record = function (type, detail) {\r\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\r\n        };\r\n        LoaderEventRecorder.prototype.getEvents = function () {\r\n            return this._events;\r\n        };\r\n        return LoaderEventRecorder;\r\n    }());\r\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\r\n    var NullLoaderEventRecorder = /** @class */ (function () {\r\n        function NullLoaderEventRecorder() {\r\n        }\r\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\r\n            // Nothing to do\r\n        };\r\n        NullLoaderEventRecorder.prototype.getEvents = function () {\r\n            return [];\r\n        };\r\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\r\n        return NullLoaderEventRecorder;\r\n    }());\r\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var Utilities = /** @class */ (function () {\r\n        function Utilities() {\r\n        }\r\n        /**\r\n         * This method does not take care of / vs \\\r\n         */\r\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\r\n            uri = decodeURI(uri).replace(/%23/g, '#');\r\n            if (isWindows) {\r\n                if (/^file:\\/\\/\\//.test(uri)) {\r\n                    // This is a URI without a hostname => return only the path segment\r\n                    return uri.substr(8);\r\n                }\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(5);\r\n                }\r\n            }\r\n            else {\r\n                if (/^file:\\/\\//.test(uri)) {\r\n                    return uri.substr(7);\r\n                }\r\n            }\r\n            // Not sure...\r\n            return uri;\r\n        };\r\n        Utilities.startsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\r\n        };\r\n        Utilities.endsWith = function (haystack, needle) {\r\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\r\n        };\r\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\r\n        Utilities.containsQueryString = function (url) {\r\n            return /^[^\\#]*\\?/gi.test(url);\r\n        };\r\n        /**\r\n         * Does `url` start with http:// or https:// or file:// or / ?\r\n         */\r\n        Utilities.isAbsolutePath = function (url) {\r\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\r\n        };\r\n        Utilities.forEachProperty = function (obj, callback) {\r\n            if (obj) {\r\n                var key = void 0;\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        callback(key, obj[key]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Utilities.isEmpty = function (obj) {\r\n            var isEmpty = true;\r\n            Utilities.forEachProperty(obj, function () {\r\n                isEmpty = false;\r\n            });\r\n            return isEmpty;\r\n        };\r\n        Utilities.recursiveClone = function (obj) {\r\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\r\n                return obj;\r\n            }\r\n            var result = Array.isArray(obj) ? [] : {};\r\n            Utilities.forEachProperty(obj, function (key, value) {\r\n                if (value && typeof value === 'object') {\r\n                    result[key] = Utilities.recursiveClone(value);\r\n                }\r\n                else {\r\n                    result[key] = value;\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        Utilities.generateAnonymousModule = function () {\r\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\r\n        };\r\n        Utilities.isAnonymousModule = function (id) {\r\n            return Utilities.startsWith(id, '===anonymous');\r\n        };\r\n        Utilities.getHighPerformanceTimestamp = function () {\r\n            if (!this.PERFORMANCE_NOW_PROBED) {\r\n                this.PERFORMANCE_NOW_PROBED = true;\r\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\r\n            }\r\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\r\n        };\r\n        Utilities.NEXT_ANONYMOUS_ID = 1;\r\n        Utilities.PERFORMANCE_NOW_PROBED = false;\r\n        Utilities.HAS_PERFORMANCE_NOW = false;\r\n        return Utilities;\r\n    }());\r\n    AMDLoader.Utilities = Utilities;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    function ensureError(err) {\r\n        if (err instanceof Error) {\r\n            return err;\r\n        }\r\n        var result = new Error(err.message || String(err) || 'Unknown Error');\r\n        if (err.stack) {\r\n            result.stack = err.stack;\r\n        }\r\n        return result;\r\n    }\r\n    AMDLoader.ensureError = ensureError;\r\n    ;\r\n    var ConfigurationOptionsUtil = /** @class */ (function () {\r\n        function ConfigurationOptionsUtil() {\r\n        }\r\n        /**\r\n         * Ensure configuration options make sense\r\n         */\r\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\r\n            function defaultOnError(err) {\r\n                if (err.phase === 'loading') {\r\n                    console.error('Loading \"' + err.moduleId + '\" failed');\r\n                    console.error(err);\r\n                    console.error('Here are the modules that depend on it:');\r\n                    console.error(err.neededBy);\r\n                    return;\r\n                }\r\n                if (err.phase === 'factory') {\r\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n            }\r\n            options = options || {};\r\n            if (typeof options.baseUrl !== 'string') {\r\n                options.baseUrl = '';\r\n            }\r\n            if (typeof options.isBuild !== 'boolean') {\r\n                options.isBuild = false;\r\n            }\r\n            if (typeof options.paths !== 'object') {\r\n                options.paths = {};\r\n            }\r\n            if (typeof options.config !== 'object') {\r\n                options.config = {};\r\n            }\r\n            if (typeof options.catchError === 'undefined') {\r\n                options.catchError = false;\r\n            }\r\n            if (typeof options.recordStats === 'undefined') {\r\n                options.recordStats = false;\r\n            }\r\n            if (typeof options.urlArgs !== 'string') {\r\n                options.urlArgs = '';\r\n            }\r\n            if (typeof options.onError !== 'function') {\r\n                options.onError = defaultOnError;\r\n            }\r\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\r\n                options.ignoreDuplicateModules = [];\r\n            }\r\n            if (options.baseUrl.length > 0) {\r\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\r\n                    options.baseUrl += '/';\r\n                }\r\n            }\r\n            if (typeof options.cspNonce !== 'string') {\r\n                options.cspNonce = '';\r\n            }\r\n            if (typeof options.preferScriptTags === 'undefined') {\r\n                options.preferScriptTags = false;\r\n            }\r\n            if (!Array.isArray(options.nodeModules)) {\r\n                options.nodeModules = [];\r\n            }\r\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\r\n                if (typeof options.nodeCachedData.seed !== 'string') {\r\n                    options.nodeCachedData.seed = 'seed';\r\n                }\r\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\r\n                    options.nodeCachedData.writeDelay = 1000 * 7;\r\n                }\r\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\r\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\r\n                    err.phase = 'configuration';\r\n                    options.onError(err);\r\n                    options.nodeCachedData = undefined;\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\r\n            if (overwrite === void 0) { overwrite = null; }\r\n            if (base === void 0) { base = null; }\r\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\r\n            // Merge known properties and overwrite the unknown ones\r\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\r\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\r\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\r\n                }\r\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\r\n                }\r\n                else if (key === 'config' && typeof result.config !== 'undefined') {\r\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\r\n                }\r\n                else {\r\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\r\n                }\r\n            });\r\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\r\n        };\r\n        return ConfigurationOptionsUtil;\r\n    }());\r\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\r\n    var Configuration = /** @class */ (function () {\r\n        function Configuration(env, options) {\r\n            this._env = env;\r\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\r\n            this._createIgnoreDuplicateModulesMap();\r\n            this._createNodeModulesMap();\r\n            this._createSortedPathsRules();\r\n            if (this.options.baseUrl === '') {\r\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeRequire.main.filename;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n                if (this.options.nodeMain && this._env.isNode) {\r\n                    var nodeMain = this.options.nodeMain;\r\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\r\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\r\n            // Build a map out of the ignoreDuplicateModules array\r\n            this.ignoreDuplicateModulesMap = {};\r\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\r\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createNodeModulesMap = function () {\r\n            // Build a map out of nodeModules array\r\n            this.nodeModulesMap = Object.create(null);\r\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\r\n                var nodeModule = _a[_i];\r\n                this.nodeModulesMap[nodeModule] = true;\r\n            }\r\n        };\r\n        Configuration.prototype._createSortedPathsRules = function () {\r\n            var _this = this;\r\n            // Create an array our of the paths rules, sorted descending by length to\r\n            // result in a more specific -> less specific order\r\n            this.sortedPathsRules = [];\r\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\r\n                if (!Array.isArray(to)) {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: [to]\r\n                    });\r\n                }\r\n                else {\r\n                    _this.sortedPathsRules.push({\r\n                        from: from,\r\n                        to: to\r\n                    });\r\n                }\r\n            });\r\n            this.sortedPathsRules.sort(function (a, b) {\r\n                return b.from.length - a.from.length;\r\n            });\r\n        };\r\n        /**\r\n         * Clone current configuration and overwrite options selectively.\r\n         * @param options The selective options to overwrite with.\r\n         * @result A new configuration\r\n         */\r\n        Configuration.prototype.cloneAndMerge = function (options) {\r\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\r\n        };\r\n        /**\r\n         * Get current options bag. Useful for passing it forward to plugins.\r\n         */\r\n        Configuration.prototype.getOptionsLiteral = function () {\r\n            return this.options;\r\n        };\r\n        Configuration.prototype._applyPaths = function (moduleId) {\r\n            var pathRule;\r\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\r\n                pathRule = this.sortedPathsRules[i];\r\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\r\n                    var result = [];\r\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\r\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return [moduleId];\r\n        };\r\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\r\n            if (AMDLoader.Utilities.containsQueryString(url)) {\r\n                return url + '&' + this.options.urlArgs;\r\n            }\r\n            else {\r\n                return url + '?' + this.options.urlArgs;\r\n            }\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\r\n            if (this.options.urlArgs) {\r\n                return this._addUrlArgsToUrl(url);\r\n            }\r\n            return url;\r\n        };\r\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\r\n            if (this.options.urlArgs) {\r\n                for (var i = 0, len = urls.length; i < len; i++) {\r\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\r\n                }\r\n            }\r\n            return urls;\r\n        };\r\n        /**\r\n         * Transform a module id to a location. Appends .js to module ids\r\n         */\r\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\r\n            var isNodeModule = ((this.nodeModulesMap[moduleId] === true)\r\n                || (this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId)));\r\n            if (isNodeModule) {\r\n                // This is a node module...\r\n                if (this.isBuild()) {\r\n                    // ...and we are at build time, drop it\r\n                    return ['empty:'];\r\n                }\r\n                else {\r\n                    // ...and at runtime we create a `shortcut`-path\r\n                    return ['node|' + moduleId];\r\n                }\r\n            }\r\n            var result = moduleId;\r\n            var results;\r\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                results = this._applyPaths(result);\r\n                for (var i = 0, len = results.length; i < len; i++) {\r\n                    if (this.isBuild() && results[i] === 'empty:') {\r\n                        continue;\r\n                    }\r\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\r\n                        results[i] = this.options.baseUrl + results[i];\r\n                    }\r\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\r\n                        results[i] = results[i] + '.js';\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\r\n                    result = result + '.js';\r\n                }\r\n                results = [result];\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrls(results);\r\n        };\r\n        /**\r\n         * Transform a module id or url to a location.\r\n         */\r\n        Configuration.prototype.requireToUrl = function (url) {\r\n            var result = url;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                result = this._applyPaths(result)[0];\r\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                    result = this.options.baseUrl + result;\r\n                }\r\n            }\r\n            return this._addUrlArgsIfNecessaryToUrl(result);\r\n        };\r\n        /**\r\n         * Flag to indicate if current execution is as part of a build.\r\n         */\r\n        Configuration.prototype.isBuild = function () {\r\n            return this.options.isBuild;\r\n        };\r\n        /**\r\n         * Test if module `moduleId` is expected to be defined multiple times\r\n         */\r\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\r\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\r\n        };\r\n        /**\r\n         * Get the configuration settings for the provided module id\r\n         */\r\n        Configuration.prototype.getConfigForModule = function (moduleId) {\r\n            if (this.options.config) {\r\n                return this.options.config[moduleId];\r\n            }\r\n        };\r\n        /**\r\n         * Should errors be caught when executing module factories?\r\n         */\r\n        Configuration.prototype.shouldCatchError = function () {\r\n            return this.options.catchError;\r\n        };\r\n        /**\r\n         * Should statistics be recorded?\r\n         */\r\n        Configuration.prototype.shouldRecordStats = function () {\r\n            return this.options.recordStats;\r\n        };\r\n        /**\r\n         * Forward an error to the error handler.\r\n         */\r\n        Configuration.prototype.onError = function (err) {\r\n            this.options.onError(err);\r\n        };\r\n        return Configuration;\r\n    }());\r\n    AMDLoader.Configuration = Configuration;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    /**\r\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\r\n     */\r\n    var OnlyOnceScriptLoader = /** @class */ (function () {\r\n        function OnlyOnceScriptLoader(env) {\r\n            this._env = env;\r\n            this._scriptLoader = null;\r\n            this._callbackMap = {};\r\n        }\r\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            if (!this._scriptLoader) {\r\n                if (this._env.isWebWorker) {\r\n                    this._scriptLoader = new WorkerScriptLoader();\r\n                }\r\n                else if (this._env.isElectronRenderer) {\r\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\r\n                    if (preferScriptTags) {\r\n                        this._scriptLoader = new BrowserScriptLoader();\r\n                    }\r\n                    else {\r\n                        this._scriptLoader = new NodeScriptLoader(this._env);\r\n                    }\r\n                }\r\n                else if (this._env.isNode) {\r\n                    this._scriptLoader = new NodeScriptLoader(this._env);\r\n                }\r\n                else {\r\n                    this._scriptLoader = new BrowserScriptLoader();\r\n                }\r\n            }\r\n            var scriptCallbacks = {\r\n                callback: callback,\r\n                errorback: errorback\r\n            };\r\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\r\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\r\n                return;\r\n            }\r\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\r\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].callback();\r\n            }\r\n        };\r\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\r\n            var scriptCallbacks = this._callbackMap[scriptSrc];\r\n            delete this._callbackMap[scriptSrc];\r\n            for (var i = 0; i < scriptCallbacks.length; i++) {\r\n                scriptCallbacks[i].errorback(err);\r\n            }\r\n        };\r\n        return OnlyOnceScriptLoader;\r\n    }());\r\n    var BrowserScriptLoader = /** @class */ (function () {\r\n        function BrowserScriptLoader() {\r\n        }\r\n        /**\r\n         * Attach load / error listeners to a script element and remove them when either one has fired.\r\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\r\n         */\r\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\r\n            var unbind = function () {\r\n                script.removeEventListener('load', loadEventListener);\r\n                script.removeEventListener('error', errorEventListener);\r\n            };\r\n            var loadEventListener = function (e) {\r\n                unbind();\r\n                callback();\r\n            };\r\n            var errorEventListener = function (e) {\r\n                unbind();\r\n                errorback(e);\r\n            };\r\n            script.addEventListener('load', loadEventListener);\r\n            script.addEventListener('error', errorEventListener);\r\n        };\r\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var opts = moduleManager.getConfig().getOptionsLiteral();\r\n                var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_1 = null;\r\n                try {\r\n                    moduleExports_1 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\r\n                callback();\r\n            }\r\n            else {\r\n                var script = document.createElement('script');\r\n                script.setAttribute('async', 'async');\r\n                script.setAttribute('type', 'text/javascript');\r\n                this.attachListeners(script, callback, errorback);\r\n                script.setAttribute('src', scriptSrc);\r\n                // Propagate CSP nonce to dynamically created script tag.\r\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\r\n                if (cspNonce) {\r\n                    script.setAttribute('nonce', cspNonce);\r\n                }\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        };\r\n        return BrowserScriptLoader;\r\n    }());\r\n    var WorkerScriptLoader = /** @class */ (function () {\r\n        function WorkerScriptLoader() {\r\n        }\r\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            try {\r\n                importScripts(scriptSrc);\r\n                callback();\r\n            }\r\n            catch (e) {\r\n                errorback(e);\r\n            }\r\n        };\r\n        return WorkerScriptLoader;\r\n    }());\r\n    var NodeScriptLoader = /** @class */ (function () {\r\n        function NodeScriptLoader(env) {\r\n            this._env = env;\r\n            this._didInitialize = false;\r\n            this._didPatchNodeRequire = false;\r\n        }\r\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\r\n            if (this._didInitialize) {\r\n                return;\r\n            }\r\n            this._didInitialize = true;\r\n            // capture node modules\r\n            this._fs = nodeRequire('fs');\r\n            this._vm = nodeRequire('vm');\r\n            this._path = nodeRequire('path');\r\n            this._crypto = nodeRequire('crypto');\r\n        };\r\n        // patch require-function of nodejs such that we can manually create a script\r\n        // from cached data. this is done by overriding the `Module._compile` function\r\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\r\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\r\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\r\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\r\n            if (!nodeCachedData) {\r\n                return;\r\n            }\r\n            if (this._didPatchNodeRequire) {\r\n                return;\r\n            }\r\n            this._didPatchNodeRequire = true;\r\n            var that = this;\r\n            var Module = nodeRequire('module');\r\n            function makeRequireFunction(mod) {\r\n                var Module = mod.constructor;\r\n                var require = function require(path) {\r\n                    try {\r\n                        return mod.require(path);\r\n                    }\r\n                    finally {\r\n                        // nothing\r\n                    }\r\n                };\r\n                require.resolve = function resolve(request) {\r\n                    return Module._resolveFilename(request, mod);\r\n                };\r\n                require.main = process.mainModule;\r\n                require.extensions = Module._extensions;\r\n                require.cache = Module._cache;\r\n                return require;\r\n            }\r\n            Module.prototype._compile = function (content, filename) {\r\n                // remove shebang and create wrapper function\r\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\r\n                // create script\r\n                var recorder = moduleManager.getRecorder();\r\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\r\n                var options = { filename: filename };\r\n                var hashData;\r\n                try {\r\n                    var data = that._fs.readFileSync(cachedDataPath);\r\n                    hashData = data.slice(0, 16);\r\n                    options.cachedData = data.slice(16);\r\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                }\r\n                catch (_e) {\r\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                }\r\n                var script = new that._vm.Script(scriptSource, options);\r\n                var compileWrapper = script.runInThisContext(options);\r\n                // run script\r\n                var dirname = that._path.dirname(filename);\r\n                var require = makeRequireFunction(this);\r\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\r\n                var result = compileWrapper.apply(this.exports, args);\r\n                // cached data aftermath\r\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\r\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\r\n                return result;\r\n            };\r\n        };\r\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\r\n            var _this = this;\r\n            var opts = moduleManager.getConfig().getOptionsLiteral();\r\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\r\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\r\n            this._init(nodeRequire);\r\n            this._initNodeRequire(nodeRequire, moduleManager);\r\n            var recorder = moduleManager.getRecorder();\r\n            if (/^node\\|/.test(scriptSrc)) {\r\n                var pieces = scriptSrc.split('|');\r\n                var moduleExports_2 = null;\r\n                try {\r\n                    moduleExports_2 = nodeRequire(pieces[1]);\r\n                }\r\n                catch (err) {\r\n                    errorback(err);\r\n                    return;\r\n                }\r\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\r\n                callback();\r\n            }\r\n            else {\r\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\r\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\r\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\r\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\r\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\r\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\r\n                    if (err) {\r\n                        errorback(err);\r\n                        return;\r\n                    }\r\n                    var scriptSource;\r\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    else {\r\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\r\n                    }\r\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\r\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\r\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\r\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\r\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\r\n            var recorder = moduleManager.getRecorder();\r\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\r\n            var script = new this._vm.Script(contents, options);\r\n            var ret = script.runInThisContext(options);\r\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\r\n            var receivedDefineCall = false;\r\n            var localDefineFunc = function () {\r\n                receivedDefineCall = true;\r\n                return globalDefineFunc.apply(null, arguments);\r\n            };\r\n            localDefineFunc.amd = globalDefineFunc.amd;\r\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\r\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\r\n            if (receivedDefineCall) {\r\n                callback();\r\n            }\r\n            else {\r\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\r\n            }\r\n            return script;\r\n        };\r\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\r\n            if (!this._env.isElectronRenderer) {\r\n                return path;\r\n            }\r\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\r\n            if (driveLetterMatch) {\r\n                // windows\r\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\r\n            }\r\n            else {\r\n                // nix\r\n                return \"file://\" + path;\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\r\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\r\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\r\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\r\n        };\r\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\r\n            var _this = this;\r\n            if (script.cachedDataRejected) {\r\n                // cached data got rejected -> delete and re-create\r\n                this._fs.unlink(cachedDataPath, function (err) {\r\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\r\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n                    if (err) {\r\n                        moduleManager.getConfig().onError(err);\r\n                    }\r\n                });\r\n            }\r\n            else if (createCachedData) {\r\n                // no cached data, but wanted\r\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\r\n            }\r\n        };\r\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\r\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\r\n        // -V8_CACHED_DATA is what v8 produces\r\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\r\n            var _this = this;\r\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\r\n            var lastSize = -1;\r\n            var iteration = 0;\r\n            var hashData = undefined;\r\n            var createLoop = function () {\r\n                setTimeout(function () {\r\n                    if (!hashData) {\r\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                    }\r\n                    var cachedData = script.createCachedData();\r\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\r\n                        // done\r\n                        return;\r\n                    }\r\n                    if (cachedData.length < lastSize) {\r\n                        // less data than before: skip, try again next round\r\n                        createLoop();\r\n                        return;\r\n                    }\r\n                    lastSize = cachedData.length;\r\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\r\n                        createLoop();\r\n                    });\r\n                }, timeout * (Math.pow(4, iteration++)));\r\n            };\r\n            // with some delay (`timeout`) create cached data\r\n            // and repeat that (with backoff delay) until the\r\n            // data seems to be not changing anymore\r\n            createLoop();\r\n        };\r\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\r\n            if (!cachedDataPath) {\r\n                // no cached data case\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\r\n            }\r\n            else {\r\n                // cached data case: read both files in parallel\r\n                var source_1 = undefined;\r\n                var cachedData_1 = undefined;\r\n                var hashData_1 = undefined;\r\n                var steps_1 = 2;\r\n                var step_1 = function (err) {\r\n                    if (err) {\r\n                        callback(err);\r\n                    }\r\n                    else if (--steps_1 === 0) {\r\n                        callback(undefined, source_1, cachedData_1, hashData_1);\r\n                    }\r\n                };\r\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\r\n                    source_1 = data;\r\n                    step_1(err);\r\n                });\r\n                this._fs.readFile(cachedDataPath, function (err, data) {\r\n                    if (!err && data && data.length > 0) {\r\n                        hashData_1 = data.slice(0, 16);\r\n                        cachedData_1 = data.slice(16);\r\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\r\n                    }\r\n                    else {\r\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\r\n                    }\r\n                    step_1(); // ignored: cached data is optional\r\n                });\r\n            }\r\n        };\r\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\r\n            var _this = this;\r\n            if (!hashData) {\r\n                // nothing to do\r\n                return;\r\n            }\r\n            if (script.cachedDataRejected) {\r\n                // invalid anyways\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                // check source hash - the contract is that file paths change when file content\r\n                // change (e.g use the commit or version id as cache path). this check is\r\n                // for violations of this contract.\r\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\r\n                if (!hashData.equals(hashDataNow)) {\r\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\r\n                    _this._fs.unlink(cachedDataPath, function (err) {\r\n                        if (err) {\r\n                            moduleManager.getConfig().onError(err);\r\n                        }\r\n                    });\r\n                }\r\n            }, Math.ceil(5000 * (1 + Math.random())));\r\n        };\r\n        NodeScriptLoader._BOM = 0xFEFF;\r\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\r\n        NodeScriptLoader._SUFFIX = '\\n});';\r\n        return NodeScriptLoader;\r\n    }());\r\n    function createScriptLoader(env) {\r\n        return new OnlyOnceScriptLoader(env);\r\n    }\r\n    AMDLoader.createScriptLoader = createScriptLoader;\r\n})(AMDLoader || (AMDLoader = {}));\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    // ------------------------------------------------------------------------\r\n    // ModuleIdResolver\r\n    var ModuleIdResolver = /** @class */ (function () {\r\n        function ModuleIdResolver(fromModuleId) {\r\n            var lastSlash = fromModuleId.lastIndexOf('/');\r\n            if (lastSlash !== -1) {\r\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\r\n            }\r\n            else {\r\n                this.fromModulePath = '';\r\n            }\r\n        }\r\n        /**\r\n         * Normalize 'a/../name' to 'name', etc.\r\n         */\r\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\r\n            var r = moduleId, pattern;\r\n            // replace /./ => /\r\n            pattern = /\\/\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^./ => nothing\r\n            r = r.replace(/^\\.\\//g, '');\r\n            // replace /aa/../ => / (BUT IGNORE /../../)\r\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\r\n            while (pattern.test(r)) {\r\n                r = r.replace(pattern, '/');\r\n            }\r\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\r\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\r\n            return r;\r\n        };\r\n        /**\r\n         * Resolve relative module ids\r\n         */\r\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\r\n            var result = moduleId;\r\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\r\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\r\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\r\n        return ModuleIdResolver;\r\n    }());\r\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\r\n    // ------------------------------------------------------------------------\r\n    // Module\r\n    var Module = /** @class */ (function () {\r\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\r\n            this.id = id;\r\n            this.strId = strId;\r\n            this.dependencies = dependencies;\r\n            this._callback = callback;\r\n            this._errorback = errorback;\r\n            this.moduleIdResolver = moduleIdResolver;\r\n            this.exports = {};\r\n            this.error = null;\r\n            this.exportsPassedIn = false;\r\n            this.unresolvedDependenciesCount = this.dependencies.length;\r\n            this._isComplete = false;\r\n        }\r\n        Module._safeInvokeFunction = function (callback, args) {\r\n            try {\r\n                return {\r\n                    returnedValue: callback.apply(AMDLoader.global, args),\r\n                    producedError: null\r\n                };\r\n            }\r\n            catch (e) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: e\r\n                };\r\n            }\r\n        };\r\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\r\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\r\n                return {\r\n                    returnedValue: null,\r\n                    producedError: null\r\n                };\r\n            }\r\n            if (config.shouldCatchError()) {\r\n                return this._safeInvokeFunction(callback, dependenciesValues);\r\n            }\r\n            return {\r\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\r\n                producedError: null\r\n            };\r\n        };\r\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\r\n            this._isComplete = true;\r\n            var producedError = null;\r\n            if (this._callback) {\r\n                if (typeof this._callback === 'function') {\r\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\r\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\r\n                    producedError = r.producedError;\r\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\r\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\r\n                        this.exports = r.returnedValue;\r\n                    }\r\n                }\r\n                else {\r\n                    this.exports = this._callback;\r\n                }\r\n            }\r\n            if (producedError) {\r\n                var err = AMDLoader.ensureError(producedError);\r\n                err.phase = 'factory';\r\n                err.moduleId = this.strId;\r\n                this.error = err;\r\n                config.onError(err);\r\n            }\r\n            this.dependencies = null;\r\n            this._callback = null;\r\n            this._errorback = null;\r\n            this.moduleIdResolver = null;\r\n        };\r\n        /**\r\n         * One of the direct dependencies or a transitive dependency has failed to load.\r\n         */\r\n        Module.prototype.onDependencyError = function (err) {\r\n            this._isComplete = true;\r\n            this.error = err;\r\n            if (this._errorback) {\r\n                this._errorback(err);\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Is the current module complete?\r\n         */\r\n        Module.prototype.isComplete = function () {\r\n            return this._isComplete;\r\n        };\r\n        return Module;\r\n    }());\r\n    AMDLoader.Module = Module;\r\n    var ModuleIdProvider = /** @class */ (function () {\r\n        function ModuleIdProvider() {\r\n            this._nextId = 0;\r\n            this._strModuleIdToIntModuleId = new Map();\r\n            this._intModuleIdToStrModuleId = [];\r\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\r\n            this.getModuleId('exports');\r\n            this.getModuleId('module');\r\n            this.getModuleId('require');\r\n        }\r\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\r\n            return this._nextId;\r\n        };\r\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\r\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\r\n            if (typeof id === 'undefined') {\r\n                id = this._nextId++;\r\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\r\n                this._intModuleIdToStrModuleId[id] = strModuleId;\r\n            }\r\n            return id;\r\n        };\r\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\r\n            return this._intModuleIdToStrModuleId[moduleId];\r\n        };\r\n        return ModuleIdProvider;\r\n    }());\r\n    var RegularDependency = /** @class */ (function () {\r\n        function RegularDependency(id) {\r\n            this.id = id;\r\n        }\r\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\r\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\r\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\r\n        return RegularDependency;\r\n    }());\r\n    AMDLoader.RegularDependency = RegularDependency;\r\n    var PluginDependency = /** @class */ (function () {\r\n        function PluginDependency(id, pluginId, pluginParam) {\r\n            this.id = id;\r\n            this.pluginId = pluginId;\r\n            this.pluginParam = pluginParam;\r\n        }\r\n        return PluginDependency;\r\n    }());\r\n    AMDLoader.PluginDependency = PluginDependency;\r\n    var ModuleManager = /** @class */ (function () {\r\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\r\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\r\n            this._env = env;\r\n            this._scriptLoader = scriptLoader;\r\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\r\n            this._defineFunc = defineFunc;\r\n            this._requireFunc = requireFunc;\r\n            this._moduleIdProvider = new ModuleIdProvider();\r\n            this._config = new AMDLoader.Configuration(this._env);\r\n            this._modules2 = [];\r\n            this._knownModules2 = [];\r\n            this._inverseDependencies2 = [];\r\n            this._inversePluginDependencies2 = new Map();\r\n            this._currentAnnonymousDefineCall = null;\r\n            this._recorder = null;\r\n            this._buildInfoPath = [];\r\n            this._buildInfoDefineStack = [];\r\n            this._buildInfoDependencies = [];\r\n        }\r\n        ModuleManager.prototype.reset = function () {\r\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\r\n            return this._defineFunc;\r\n        };\r\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\r\n            return this._requireFunc;\r\n        };\r\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\r\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\r\n            var normalizedPath = normalize(needle);\r\n            var stackPieces = stack.split(/\\n/);\r\n            for (var i = 0; i < stackPieces.length; i++) {\r\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\r\n                if (m) {\r\n                    var stackPath = m[1];\r\n                    var stackLine = m[2];\r\n                    var stackColumn = m[3];\r\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\r\n                    stackPath = stackPath.substr(trimPathOffset);\r\n                    stackPath = normalize(stackPath);\r\n                    if (stackPath === normalizedPath) {\r\n                        var r = {\r\n                            line: parseInt(stackLine, 10),\r\n                            col: parseInt(stackColumn, 10)\r\n                        };\r\n                        if (r.line === 1) {\r\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\r\n                        }\r\n                        return r;\r\n                    }\r\n                }\r\n            }\r\n            throw new Error('Could not correlate define call site for needle ' + needle);\r\n        };\r\n        ModuleManager.prototype.getBuildInfo = function () {\r\n            if (!this._config.isBuild()) {\r\n                return null;\r\n            }\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\r\n                var m = this._modules2[i];\r\n                if (!m) {\r\n                    continue;\r\n                }\r\n                var location_1 = this._buildInfoPath[m.id] || null;\r\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\r\n                var dependencies = this._buildInfoDependencies[m.id];\r\n                result[resultLen++] = {\r\n                    id: m.strId,\r\n                    path: location_1,\r\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\r\n                    dependencies: dependencies,\r\n                    shim: null,\r\n                    exports: m.exports\r\n                };\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype.getRecorder = function () {\r\n            if (!this._recorder) {\r\n                if (this._config.shouldRecordStats()) {\r\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\r\n                }\r\n                else {\r\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\r\n                }\r\n            }\r\n            return this._recorder;\r\n        };\r\n        ModuleManager.prototype.getLoaderEvents = function () {\r\n            return this.getRecorder().getEvents();\r\n        };\r\n        /**\r\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\r\n         * @param dependecies @see defineModule\r\n         * @param callback @see defineModule\r\n         */\r\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                throw new Error('Can only have one anonymous define call per script file');\r\n            }\r\n            var stack = null;\r\n            if (this._config.isBuild()) {\r\n                stack = new Error('StackLocation').stack || null;\r\n            }\r\n            this._currentAnnonymousDefineCall = {\r\n                stack: stack,\r\n                dependencies: dependencies,\r\n                callback: callback\r\n            };\r\n        };\r\n        /**\r\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\r\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\r\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\r\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\r\n         */\r\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\r\n            var _this = this;\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\r\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\r\n            if (this._modules2[moduleId]) {\r\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\r\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\r\n                }\r\n                // Super important! Completely ignore duplicate module definition\r\n                return;\r\n            }\r\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\r\n            this._modules2[moduleId] = m;\r\n            if (this._config.isBuild()) {\r\n                this._buildInfoDefineStack[moduleId] = stack;\r\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\r\n            }\r\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\r\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\r\n            this._resolve(m);\r\n        };\r\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\r\n            if (dependency === 'exports') {\r\n                return RegularDependency.EXPORTS;\r\n            }\r\n            if (dependency === 'module') {\r\n                return RegularDependency.MODULE;\r\n            }\r\n            if (dependency === 'require') {\r\n                return RegularDependency.REQUIRE;\r\n            }\r\n            // Normalize dependency and then request it from the manager\r\n            var bangIndex = dependency.indexOf('!');\r\n            if (bangIndex >= 0) {\r\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\r\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\r\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\r\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\r\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\r\n            }\r\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\r\n        };\r\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\r\n            var result = [], resultLen = 0;\r\n            for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\r\n            }\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\r\n            if (typeof dependencies === 'string') {\r\n                return this.synchronousRequire(dependencies, moduleIdResolver);\r\n            }\r\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\r\n        };\r\n        /**\r\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\r\n         * @param id The unique and absolute id of the required module\r\n         * @return The exports of module 'id'\r\n         */\r\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\r\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\r\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\r\n            var m = this._modules2[dependency.id];\r\n            if (!m) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\r\n            }\r\n            if (!m.isComplete()) {\r\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\r\n            }\r\n            if (m.error) {\r\n                throw m.error;\r\n            }\r\n            return m.exports;\r\n        };\r\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\r\n            var oldShouldRecordStats = this._config.shouldRecordStats();\r\n            if (shouldOverwrite) {\r\n                this._config = new AMDLoader.Configuration(this._env, params);\r\n            }\r\n            else {\r\n                this._config = this._config.cloneAndMerge(params);\r\n            }\r\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\r\n                this._recorder = null;\r\n            }\r\n        };\r\n        ModuleManager.prototype.getConfig = function () {\r\n            return this._config;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module has been loaded.\r\n         * This means its code is available and has been executed.\r\n         */\r\n        ModuleManager.prototype._onLoad = function (moduleId) {\r\n            if (this._currentAnnonymousDefineCall !== null) {\r\n                var defineCall = this._currentAnnonymousDefineCall;\r\n                this._currentAnnonymousDefineCall = null;\r\n                // Hit an anonymous define call\r\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\r\n            }\r\n        };\r\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\r\n            var _this = this;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\r\n            var err = AMDLoader.ensureError(_err);\r\n            err.phase = 'loading';\r\n            err.moduleId = strModuleId;\r\n            err.neededBy = neededBy;\r\n            return err;\r\n        };\r\n        /**\r\n         * Callback from the scriptLoader when a module hasn't been loaded.\r\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\r\n         */\r\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\r\n            var error = this._createLoadError(moduleId, err);\r\n            if (!this._modules2[moduleId]) {\r\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\r\n            }\r\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\r\n            var seenModuleId = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                seenModuleId[i] = false;\r\n            }\r\n            var someoneNotified = false;\r\n            var queue = [];\r\n            queue.push(moduleId);\r\n            seenModuleId[moduleId] = true;\r\n            while (queue.length > 0) {\r\n                var queueElement = queue.shift();\r\n                var m = this._modules2[queueElement];\r\n                if (m) {\r\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\r\n                }\r\n                var inverseDeps = this._inverseDependencies2[queueElement];\r\n                if (inverseDeps) {\r\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                        var inverseDep = inverseDeps[i];\r\n                        if (!seenModuleId[inverseDep]) {\r\n                            queue.push(inverseDep);\r\n                            seenModuleId[inverseDep] = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!someoneNotified) {\r\n                this._config.onError(error);\r\n            }\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns true if there is such a path or false otherwise.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return false;\r\n            }\r\n            var inQueue = [];\r\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\r\n                inQueue[i] = false;\r\n            }\r\n            var queue = [];\r\n            // Insert 'from' in queue\r\n            queue.push(from);\r\n            inQueue[fromId] = true;\r\n            while (queue.length > 0) {\r\n                // Pop first inserted element of queue\r\n                var element = queue.shift();\r\n                var dependencies = element.dependencies;\r\n                if (dependencies) {\r\n                    // Walk the element's dependencies\r\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                        var dependency = dependencies[i];\r\n                        if (dependency.id === toId) {\r\n                            // There is a path to 'to'\r\n                            return true;\r\n                        }\r\n                        var dependencyModule = this._modules2[dependency.id];\r\n                        if (dependencyModule && !inQueue[dependency.id]) {\r\n                            // Insert 'dependency' in queue\r\n                            inQueue[dependency.id] = true;\r\n                            queue.push(dependencyModule);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // There is no path to 'to'\r\n            return false;\r\n        };\r\n        /**\r\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\r\n         * Returns cycle as array.\r\n         * @param from Module id to start at\r\n         * @param to Module id to look for\r\n         */\r\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\r\n            if (fromId === toId || depth === 50) {\r\n                return [fromId];\r\n            }\r\n            var from = this._modules2[fromId];\r\n            if (!from) {\r\n                return null;\r\n            }\r\n            // Walk the element's dependencies\r\n            var dependencies = from.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\r\n                    if (path !== null) {\r\n                        path.push(fromId);\r\n                        return path;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Create the local 'require' that is passed into modules\r\n         */\r\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\r\n            var _this = this;\r\n            var result = (function (dependencies, callback, errorback) {\r\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\r\n            });\r\n            result.toUrl = function (id) {\r\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\r\n            };\r\n            result.getStats = function () {\r\n                return _this.getLoaderEvents();\r\n            };\r\n            result.config = function (params, shouldOverwrite) {\r\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n                _this.configure(params, shouldOverwrite);\r\n            };\r\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\r\n            return result;\r\n        };\r\n        ModuleManager.prototype._loadModule = function (moduleId) {\r\n            var _this = this;\r\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[moduleId] = true;\r\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\r\n            var paths = this._config.moduleIdToPaths(strModuleId);\r\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\r\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\r\n                paths.push('node|' + strModuleId);\r\n            }\r\n            var lastPathIndex = -1;\r\n            var loadNextPath = function (err) {\r\n                lastPathIndex++;\r\n                if (lastPathIndex >= paths.length) {\r\n                    // No more paths to try\r\n                    _this._onLoadError(moduleId, err);\r\n                }\r\n                else {\r\n                    var currentPath_1 = paths[lastPathIndex];\r\n                    var recorder_1 = _this.getRecorder();\r\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\r\n                        _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\r\n                        _this._onLoad(moduleId);\r\n                        return;\r\n                    }\r\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\r\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\r\n                        if (_this._config.isBuild()) {\r\n                            _this._buildInfoPath[moduleId] = currentPath_1;\r\n                        }\r\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\r\n                        _this._onLoad(moduleId);\r\n                    }, function (err) {\r\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\r\n                        loadNextPath(err);\r\n                    });\r\n                }\r\n            };\r\n            loadNextPath(null);\r\n        };\r\n        /**\r\n         * Resolve a plugin dependency with the plugin loaded & complete\r\n         * @param module The module that has this dependency\r\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\r\n         * @param plugin The plugin (what the plugin exports)\r\n         */\r\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\r\n            var _this = this;\r\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\r\n                // known module\r\n                return;\r\n            }\r\n            this._knownModules2[pluginDependency.id] = true;\r\n            // Delegate the loading of the resource to the plugin\r\n            var load = (function (value) {\r\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\r\n            });\r\n            load.error = function (err) {\r\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\r\n            };\r\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\r\n        };\r\n        /**\r\n         * Examine the dependencies of module 'module' and resolve them as needed.\r\n         */\r\n        ModuleManager.prototype._resolve = function (module) {\r\n            var _this = this;\r\n            var dependencies = module.dependencies;\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        module.exportsPassedIn = true;\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule && dependencyModule.isComplete()) {\r\n                        if (dependencyModule.error) {\r\n                            module.onDependencyError(dependencyModule.error);\r\n                            return;\r\n                        }\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\r\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\r\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\r\n                        cyclePath.reverse();\r\n                        cyclePath.push(dependency.id);\r\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\r\n                        // Break the cycle\r\n                        module.unresolvedDependenciesCount--;\r\n                        continue;\r\n                    }\r\n                    // record inverse dependency\r\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\r\n                    this._inverseDependencies2[dependency.id].push(module.id);\r\n                    if (dependency instanceof PluginDependency) {\r\n                        var plugin = this._modules2[dependency.pluginId];\r\n                        if (plugin && plugin.isComplete()) {\r\n                            this._loadPluginDependency(plugin.exports, dependency);\r\n                            continue;\r\n                        }\r\n                        // Record dependency for when the plugin gets loaded\r\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\r\n                        if (!inversePluginDeps) {\r\n                            inversePluginDeps = [];\r\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\r\n                        }\r\n                        inversePluginDeps.push(dependency);\r\n                        this._loadModule(dependency.pluginId);\r\n                        continue;\r\n                    }\r\n                    this._loadModule(dependency.id);\r\n                }\r\n            }\r\n            if (module.unresolvedDependenciesCount === 0) {\r\n                this._onModuleComplete(module);\r\n            }\r\n        };\r\n        ModuleManager.prototype._onModuleComplete = function (module) {\r\n            var _this = this;\r\n            var recorder = this.getRecorder();\r\n            if (module.isComplete()) {\r\n                // already done\r\n                return;\r\n            }\r\n            var dependencies = module.dependencies;\r\n            var dependenciesValues = [];\r\n            if (dependencies) {\r\n                for (var i = 0, len = dependencies.length; i < len; i++) {\r\n                    var dependency = dependencies[i];\r\n                    if (dependency === RegularDependency.EXPORTS) {\r\n                        dependenciesValues[i] = module.exports;\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.MODULE) {\r\n                        dependenciesValues[i] = {\r\n                            id: module.strId,\r\n                            config: function () {\r\n                                return _this._config.getConfigForModule(module.strId);\r\n                            }\r\n                        };\r\n                        continue;\r\n                    }\r\n                    if (dependency === RegularDependency.REQUIRE) {\r\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\r\n                        continue;\r\n                    }\r\n                    var dependencyModule = this._modules2[dependency.id];\r\n                    if (dependencyModule) {\r\n                        dependenciesValues[i] = dependencyModule.exports;\r\n                        continue;\r\n                    }\r\n                    dependenciesValues[i] = null;\r\n                }\r\n            }\r\n            module.complete(recorder, this._config, dependenciesValues);\r\n            // Fetch and clear inverse dependencies\r\n            var inverseDeps = this._inverseDependencies2[module.id];\r\n            this._inverseDependencies2[module.id] = null;\r\n            if (inverseDeps) {\r\n                // Resolve one inverse dependency at a time, always\r\n                // on the lookout for a completed module.\r\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\r\n                    var inverseDependencyId = inverseDeps[i];\r\n                    var inverseDependency = this._modules2[inverseDependencyId];\r\n                    inverseDependency.unresolvedDependenciesCount--;\r\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\r\n                        this._onModuleComplete(inverseDependency);\r\n                    }\r\n                }\r\n            }\r\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\r\n            if (inversePluginDeps) {\r\n                // This module is used as a plugin at least once\r\n                // Fetch and clear these inverse plugin dependencies\r\n                this._inversePluginDependencies2.delete(module.id);\r\n                // Resolve plugin dependencies one at a time\r\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\r\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\r\n                }\r\n            }\r\n        };\r\n        return ModuleManager;\r\n    }());\r\n    AMDLoader.ModuleManager = ModuleManager;\r\n})(AMDLoader || (AMDLoader = {}));\r\nvar define;\r\nvar AMDLoader;\r\n(function (AMDLoader) {\r\n    var env = new AMDLoader.Environment();\r\n    var moduleManager = null;\r\n    var DefineFunc = function (id, dependencies, callback) {\r\n        if (typeof id !== 'string') {\r\n            callback = dependencies;\r\n            dependencies = id;\r\n            id = null;\r\n        }\r\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\r\n            callback = dependencies;\r\n            dependencies = null;\r\n        }\r\n        if (!dependencies) {\r\n            dependencies = ['require', 'exports', 'module'];\r\n        }\r\n        if (id) {\r\n            moduleManager.defineModule(id, dependencies, callback, null, null);\r\n        }\r\n        else {\r\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\r\n        }\r\n    };\r\n    DefineFunc.amd = {\r\n        jQuery: true\r\n    };\r\n    var _requireFunc_config = function (params, shouldOverwrite) {\r\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\r\n        moduleManager.configure(params, shouldOverwrite);\r\n    };\r\n    var RequireFunc = function () {\r\n        if (arguments.length === 1) {\r\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\r\n                _requireFunc_config(arguments[0]);\r\n                return;\r\n            }\r\n            if (typeof arguments[0] === 'string') {\r\n                return moduleManager.synchronousRequire(arguments[0]);\r\n            }\r\n        }\r\n        if (arguments.length === 2 || arguments.length === 3) {\r\n            if (Array.isArray(arguments[0])) {\r\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Unrecognized require call');\r\n    };\r\n    RequireFunc.config = _requireFunc_config;\r\n    RequireFunc.getConfig = function () {\r\n        return moduleManager.getConfig().getOptionsLiteral();\r\n    };\r\n    RequireFunc.reset = function () {\r\n        moduleManager = moduleManager.reset();\r\n    };\r\n    RequireFunc.getBuildInfo = function () {\r\n        return moduleManager.getBuildInfo();\r\n    };\r\n    RequireFunc.getStats = function () {\r\n        return moduleManager.getLoaderEvents();\r\n    };\r\n    RequireFunc.define = function () {\r\n        return DefineFunc.apply(null, arguments);\r\n    };\r\n    function init() {\r\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\r\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\r\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\r\n                // re-expose node's require function\r\n                var nodeRequire = function (what) {\r\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\r\n                    try {\r\n                        return _nodeRequire_1(what);\r\n                    }\r\n                    finally {\r\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\r\n                    }\r\n                };\r\n                AMDLoader.global.nodeRequire = nodeRequire;\r\n                RequireFunc.nodeRequire = nodeRequire;\r\n                RequireFunc.__$__nodeRequire = nodeRequire;\r\n            }\r\n        }\r\n        if (env.isNode && !env.isElectronRenderer) {\r\n            module.exports = RequireFunc;\r\n            require = RequireFunc;\r\n        }\r\n        else {\r\n            if (!env.isElectronRenderer) {\r\n                AMDLoader.global.define = DefineFunc;\r\n            }\r\n            AMDLoader.global.require = RequireFunc;\r\n        }\r\n    }\r\n    AMDLoader.init = init;\r\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\r\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\r\n        // The global variable require can configure the loader\r\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\r\n            RequireFunc.config(AMDLoader.global.require);\r\n        }\r\n        // This define is for the local closure defined in node in the case that the loader is concatenated\r\n        define = function () {\r\n            return DefineFunc.apply(null, arguments);\r\n        };\r\n        define.amd = DefineFunc.amd;\r\n        if (typeof doNotInitLoader === 'undefined') {\r\n            init();\r\n        }\r\n    }\r\n})(AMDLoader || (AMDLoader = {}));\r\n"]}